{"version":3,"file":"static/js/682.a9ae6a9c.chunk.js","mappings":"gKACA,G,OAA0B,0BAA1B,EAAkE,8BAAlE,EAA+L,0BCA/L,EAA+D,yB,UCM/D,EAJgB,SAACA,GACf,OAAO,gBAAKC,UAAWC,EAAhB,SAA4BF,EAAMG,SAC1C,ECJD,EAA2H,+BAA3H,EAAmK,2B,UCgBnK,EAbmB,SAACH,GAClB,OACE,gBAAKC,UAAWC,EAAhB,UACE,SAAC,KAAD,CACEE,GAAIJ,EAAMK,KACVJ,UAAW,SAACK,GAAD,OAAcA,EAAQC,SAAR,UAAsBL,GAAa,EAAjD,EAFb,SAIGF,EAAMQ,QAId,EC4BD,EAtCgB,SAACR,GACf,IAAIS,EAAmBT,EAAMU,SAASC,KAAI,SAACR,GAAD,OACxC,SAAC,EAAD,CAA0BA,QAASA,EAAQA,SAA7BA,EAAQS,GADkB,IAGtCC,EAAkBb,EAAMc,QAAQH,KAAI,SAACI,GAAD,OACtC,SAAC,EAAD,CAA4BP,KAAMO,EAAOP,KAAMH,KAAMU,EAAOV,MAA3CU,EAAOH,GADc,IAYxC,OACE,iBAAKX,UAAWC,EAAhB,WACE,gBAAKD,UAAWC,EAAhB,SAAiCW,KACjC,iBAAKZ,UAAWC,EAAhB,WACE,yBAAMO,KACN,4BACE,0BACE,kBACEO,SAhBc,SAACC,GACzB,IAAIC,EAAOD,EAAEE,OAAOC,MACpBpB,EAAMqB,kBAAkBH,EACzB,EAcWE,MAAOpB,EAAMsB,eACbC,KAAK,YAGT,0BACE,mBAAQC,QAlBE,WAClBxB,EAAMyB,aACP,EAgBS,4BAMX,ECdD,GAFyBC,E,QAAAA,KArBD,SAACC,GACvB,MAAO,CACLjB,SAAUiB,EAAMC,YAAYlB,SAC5BI,QAASa,EAAMC,YAAYd,QAC3BQ,eAAgBK,EAAMC,YAAYN,eAErC,IAE0B,SAACO,GAC1B,MAAO,CACLR,kBAAmB,SAACH,GAClB,IAAIY,GAASC,EAAAA,EAAAA,IAAoBb,GACjCW,EAASC,EACV,EACDL,YAAa,WACX,IAAIK,GAASE,EAAAA,EAAAA,MACbH,EAASC,EACV,EAEJ,GAEwBJ,CAA6CO,E","sources":["webpack://my-app/./src/components/Dialogs/Dialogs.module.css?1b2e","webpack://my-app/./src/components/Dialogs/Messages/Message.module.css?2e1f","components/Dialogs/Messages/Message.jsx","webpack://my-app/./src/components/Dialogs/DialogItem/DialogItem.module.css?beb9","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__O4yzG\",\"dialogsItems\":\"Dialogs_dialogsItems__zMx5I\",\"dialogsItem\":\"Dialogs_dialogsItem__Vbg-N\",\"dialogItem\":\"Dialogs_dialogItem__bOV5f\",\"messages\":\"Dialogs_messages__-RbyG\",\"message\":\"Dialogs_message__nfI+J\",\"active\":\"Dialogs_active__VCMqk\"};","// extracted by mini-css-extract-plugin\nexport default {\"messages\":\"Message_messages__0rBK5\",\"message\":\"Message_message__mzqIl\"};","import React from \"react\";\nimport c from \"./Message.module.css\";\n\nconst Message = (props) => {\n  return <div className={c.message}>{props.message}</div>;\n};\n\nexport default Message;\n","// extracted by mini-css-extract-plugin\nexport default {\"dialogsItems\":\"DialogItem_dialogsItems__z4Jgb\",\"dialogsItem\":\"DialogItem_dialogsItem__4zerB\",\"dialogItem\":\"DialogItem_dialogItem__YGkVX\",\"active\":\"DialogItem_active__Xrffc\"};","import React from \"react\";\nimport c from \"./DialogItem.module.css\";\nimport { NavLink } from \"react-router-dom\";\n\nconst DialogItem = (props) => {\n  return (\n    <div className={c.dialogItem}>\n      <NavLink\n        to={props.path}\n        className={(navData) => (navData.isActive ? `${c.active}` : \"\")}\n      >\n        {props.name}\n      </NavLink>\n    </div>\n  );\n};\n\nexport default DialogItem;\n","import React from \"react\";\nimport c from \"./Dialogs.module.css\";\nimport Message from \"./Messages/Message\";\nimport DialogItem from \"./DialogItem/DialogItem\";\n\nconst Dialogs = (props) => {\n  let messagesElements = props.messages.map((message) => (\n    <Message key={message.id} message={message.message} />\n  ));\n  let dialogsElements = props.dialogs.map((dialog) => (\n    <DialogItem key={dialog.id} name={dialog.name} path={dialog.path} />\n  ));\n\n  const updateMessageText = (e) => {\n    let text = e.target.value;\n    props.updateMessageText(text);\n  };\n  const sendMessage = () => {\n    props.sendMessage();\n  };\n\n  return (\n    <div className={c.dialogs}>\n      <div className={c.dialogsItems}>{dialogsElements}</div>\n      <div className={c.messages}>\n        <div>{messagesElements}</div>\n        <div>\n          <div>\n            <input\n              onChange={updateMessageText}\n              value={props.newMessageText}\n              type=\"text\"\n            />\n          </div>\n          <div>\n            <button onClick={sendMessage}>Send</button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Dialogs;\n","import { sendMessageAC, updateMessageTextAC } from \"../../redux/dialogsReducer\";\nimport Dialogs from \"./Dialogs\";\nimport { connect } from \"react-redux\";\n\nconst mapStateToProps = (state) => {\n  return {\n    messages: state.dialogsPage.messages,\n    dialogs: state.dialogsPage.dialogs,\n    newMessageText: state.dialogsPage.newMessageText,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    updateMessageText: (text) => {\n      let action = updateMessageTextAC(text);\n      dispatch(action);\n    },\n    sendMessage: () => {\n      let action = sendMessageAC();\n      dispatch(action);\n    },\n  };\n};\n\nconst DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(Dialogs);\n\nexport default DialogsContainer;\n"],"names":["props","className","c","message","to","path","navData","isActive","name","messagesElements","messages","map","id","dialogsElements","dialogs","dialog","onChange","e","text","target","value","updateMessageText","newMessageText","type","onClick","sendMessage","connect","state","dialogsPage","dispatch","action","updateMessageTextAC","sendMessageAC","Dialogs"],"sourceRoot":""}